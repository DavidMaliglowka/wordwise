<context>
# Overview
WordWise AI is an AI-first writing assistant that helps marketing professionals craft clear, persuasive business communications. Unlike solely rule-based tools, WordWise leverages large language models to provide context-aware, personalised feedback in real time. It reduces costly writing errors, accelerates content creation, and up-skills users over time.

# Core Features
	1.	Real-time Grammar & Spelling ‚Äî Flags errors as the marketer types and offers a concise one-line explanation plus one-click fix.
	2.	Live Metrics Panel ‚Äî Continuously displays word count, estimated reading time, and Flesch-Kincaid grade to keep copy within targets.
	3.	Passive Voice Highlighter ‚Äî Underlines passive constructions and proposes active-voice rewrites.
	4.	Personal Dictionary ‚Äî Lets users add product names, acronyms, and jargon to prevent false positives.
	5.	Brand-Voice Rewriter ‚Äî Detects the tone of pasted samples, stores voice guidelines, and generates on-brand alternatives.
	6.	Content-Type Optimiser ‚Äî A dropdown (‚Äòemail‚Äô | ‚Äòsocial‚Äô) that triggers channel-specific suggestions:
‚Ä¢ Email ‚Üí five subject-line variants tuned for length and emotion.
‚Ä¢ Social ‚Üí five first-line hook variants ‚â§100 chars designed to stop the scroll.

# User Experience

Persona: Maya, a SaaS marketing manager who writes email campaigns and LinkedIn posts daily.

Key Flow:
sign-up ‚Üí create brand profile (upload 3 samples) ‚Üí new document ‚Üí select content type ‚Üí compose ‚Üí inline suggestions appear ‚Üí accept / dismiss ‚Üí click ‚ÄòGenerate Variants‚Äô ‚Üí copy-export or save.

UI/UX considerations:
	‚Ä¢	Distraction-free editor with Tailwind typography.
	‚Ä¢	Hover cards show explanations without clutter.
	‚Ä¢	Side drawer for metrics & variant generation.
	‚Ä¢	All actions keyboard-accessible for speed.

Visual design:
Home / Documents Dashboard

| Area | Description | Key Components & States | Dev Notes |
|------|-------------|-------------------------|-----------|
| **Global Sidebar** (fixed 72 px) | Persistent vertical navigation on every screen. | ‚Ä¢ **WordWise ‚ÄúW‚Äù logo** (click ‚Üí dashboard)<br>‚Ä¢ Links: **Documents** (active), Version History, Trash, Account, **Apps** (badge count), **Get Pro** CTA<br>‚Ä¢ Footer: ‚Äú?‚Äù Support tooltip, **Sign out** | Collapse to icon-only rail ‚â§ 1024 px. Highlight active link with `bg-gray-100` + left border accent. |
| **Content Header** (sticky) | Utilities for document management. | ‚Ä¢ H1 **Documents**<br>‚Ä¢ **New document** button (primary + icon)<br>‚Ä¢ **Upload file** button (secondary)<br>‚Ä¢ Search field (‚âà 320 px)<br>‚Ä¢ Optional sort dropdown | Header sticks while grid scrolls. Buttons call `createDocument()` / `uploadDocument()`. |
| **Document Grid** | Gallery of past writings. | ‚Ä¢ Card ‚âà 152 √ó 208 px (desktop); responsive 2-4 columns<br>‚Ä¢ Metadata: date stamp, truncated title & snippet<br>‚Ä¢ **Score badge** (red-circled number) bottom-left<br>‚Ä¢ Quick actions: Download ‚¨áÔ∏é & Delete üóë bottom-right | Use CSS grid masonry (`grid-auto-flow:dense`). Card click ‚Üí `/doc/:id`. |
| **Empty & Pagination States** | UX for no docs & infinite scroll. | ‚Ä¢ Illustration + CTA ‚ÄúCreate your first document‚Äù when empty<br>‚Ä¢ Lazy-load 20 cards per batch; fade-in with Framer Motion | Maintain scroll position on return. |

---

Document Editor
| Area | Description | Key Components & States | Dev Notes |
|------|-------------|-------------------------|-----------|
| **Top Bar** | Lightweight chrome. | ‚Ä¢ **Back button (WordWise ‚ÄúW‚Äù icon)**<br>‚Ä¢ Editable title (`contentEditable`; default **Untitled document**)<br>‚Ä¢ **Goals** pill ‚Üí modal (tone, audience, intent)<br>‚Ä¢ **Overall Score** chip (real-time) | Height 56 px, sticky. Title auto-saves on blur. |
| **Main Editor Pane** | Rich-text canvas. | ‚Ä¢ Lexical/Tiptap editor with placeholder ‚ÄúType or paste (‚åò+V)‚Ä¶‚Äù, semantic elements<br>‚Ä¢ Inline grammar & passive-voice markup<br>‚Ä¢ Footer word-count (sticks bottom-center)<br>‚Ä¢ Toolbar bottom-left: **B I U**, H1/H2, lists, link, strikethrough | Suggestion overlays via absolute-position spans. Support standard hotkeys. |
| **Right Sidebar** (320 px) | Contextual assistant. | ‚Ä¢ **Review suggestions** (default) ‚Üí list of issues (empty state shows binoculars illustration + ‚ÄúNothing to see yet.‚Äù)<br>‚Ä¢ **Write with generative AI** tab ‚Üí prompt composer<br>‚Ä¢ **Check AI & Plagiarism** tab ‚Üí locked behind Pro | Collapses to slide-over ‚â§ 900 px. Stream list via `EventSource`/WebSocket. |
| **Interactions** | Accept/dismiss & variant generator. | ‚Ä¢ Hover suggestion ‚Üí action bar (‚úì Accept, ‚úï Dismiss, ‚ÑπÔ∏é Explain)<br>‚Ä¢ Keyboard: ‚Üë/‚Üì cycle, ‚èé accept<br>‚Ä¢ **Generate Variants** button (channel-specific) ‚Üí modal with 5 chips; click copies | Endpoint: `/functions/generateVariant`. Disable while loading. |
| **Responsiveness** | Breakpoint behaviour. | ‚Ä¢ ‚â• 1280 px: three-pane layout<br>‚Ä¢ 900-1280 px: sidebar toggles via chevron<br>‚Ä¢ ‚â§ 900 px: full-width editor; assistant opens bottom-sheet | Tailwind `lg`, `md`, `sm`. Animate with Framer Motion. |
</context>
<PRD>
# Technical Architecture
Frontend:
- React 18 + Vite + TypeScript (repo scaffolded).
- Zustand for state; React-Query for server communication.
- Editor: lexical / tiptap with custom marks for suggestions.
Backend & AI:
- Firebase Auth, Firestore, Storage.
- Cloud Functions (Node 20) orchestrate OpenAI GPT-4o calls with streaming.
- Edge caching of suggestions keyed by text hash + feature.
Data Models:
User {uid, email, tier, settings, dictionary[]}
BrandProfile {uid, toneEmbedding, styleGuide}
Document {id, uid, content, contentType, createdAt}
Suggestion {docId, range, type, original, proposed, explanation, confidence}
MetricSnapshot {docId, wc, readTime, fkGrade, capturedAt}
Infrastructure:
- GitHub Actions ‚Üí Firebase Hosting (CDN) ‚Üí users.
- Secrets in Google Secret Manager.


# Development Roadmap

MVP (Core Clone)
	‚Ä¢	Bootstrap repo & CI/CD.
	‚Ä¢	Firebase Auth & Firestore schema.
	‚Ä¢	Rich-text editor with real-time grammar/spell powered by GPT-4o proof-reading model.
	‚Ä¢	Live Metrics Panel.
	‚Ä¢	Passive voice detection.
	‚Ä¢	Document CRUD & hosting.

AI Enhancement
	‚Ä¢	Personal Dictionary CRUD and false-positive suppression.
	‚Ä¢	Brand-Voice training (sample upload) & on-brand rewrites.
	‚Ä¢	Content-Type dropdown and variant generators (email & social).
	‚Ä¢	Usage analytics collection.

Future Enhancements
	‚Ä¢	Team collaboration & commenting.
	‚Ä¢	Multi-brand management.
	‚Ä¢	Chrome extension & Gmail plugin.
	‚Ä¢	Fine-tuning or RAG for domain-specific tone.

# Logical Dependency Chain
	1.	Repo / tooling / CI.
	2.	Firebase project & security rules.
	3.	Auth flow.
	4.	Editor component.
	5.	Grammar/spell check endpoint.
	6.	Metrics panel.
	7.	Passive-voice logic.
	8.	Document persistence.
	9.	Personal dictionary.
	10.	Brand profile & embeddings.
	11.	Content-type variant generator.
	12.	Deploy & bug-bash.

# Risks and Mitigations
	‚Ä¢	LLM latency ‚Üí use streaming + optimistic UI fallbacks.
	‚Ä¢	API cost escalation ‚Üí cache & batch requests; monitor token usage.
	‚Ä¢	Suggestion accuracy ‚Üí gather acceptance telemetry; add feedback toggle.
	‚Ä¢	Scope creep in 7-day window ‚Üí freeze to six user stories; time-box each phase.
	‚Ä¢	Security & privacy ‚Üí enforce Firebase rules, encrypt PII, never store raw proprietary copy in logs.

# Appendix
	‚Ä¢	Market data: Grammarly 30 M DAU; $200 M ARR.
	‚Ä¢	Success metrics: ‚â•85 % grammar accuracy, <2 s median suggestion latency, ‚â•80 % suggestion acceptance in user tests.
	‚Ä¢	Key libraries: lexical editor, OpenAI node sdk, tailwind-merge.
  ‚Ä¢ Security Requirements: Firebase Authentication with secure session management, HTTPS everywhere with proper certificate management, Data encryption at rest and in transit

</PRD>
